#include <MFRC522.h>
#define RST_PIN 9
#define SS_PIN 10 // 模組上的 SDA 接腳
MFRC522 mfrc522; // 建立 MFRC522 實體

void setup() {
Serial.begin(9600);
SPI.begin(); // 初始化 SPI 介面
mfrc522.PCD_Init(SS_PIN, RST_PIN); // 初始化 MFRC522 卡
Serial.print(F("Reader "));
Serial.print(F(": "));
mfrc522.PCD_DumpVersionToSerial(); // 顯示讀卡設備的版本
}

void loop() {
// 檢查是否是一張新的卡
if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
// 顯示原始 UID
Serial.print(F("Card UID: "));
dump_byte_array(mfrc522.uid.uidByte, mfrc522.uid.size); // 顯示卡片的 UID
Serial.println();

// 顯示 00+8 位 16 進制 UID（反序）
Serial.print(F("00+Reversed Hex UID: "));
String reversedHexUID = getReversedHexUID(mfrc522.uid.uidByte, mfrc522.uid.size);
Serial.println(reversedHexUID);

Serial.print(F("PICC type: "));
MFRC522::PICC_Type piccType = mfrc522.PICC_GetType(mfrc522.uid.sak);
Serial.println(mfrc522.PICC_GetTypeName(piccType)); // 顯示卡片的類型
mfrc522.PICC_HaltA(); // 卡片進入停止模式
}
}

/**
* 這個副程式把讀取到的 UID，用 16 進位顯示出來
*/
void dump_byte_array(byte *buffer, byte bufferSize) {
for (byte i = 0; i < bufferSize; i++) {
Serial.print(buffer[i] < 0x10 ? " 0" : " ");
Serial.print(buffer[i], HEX);
}
}

/**
* 將 UID 轉換為反序的 8 位 16 進制字串，並加上前綴 "00"
*/
String getReversedHexUID(byte *buffer, byte bufferSize) {
String reversedHexUID = "00"; // 初始化字串，前綴 "00"
for (int i = bufferSize - 1; i >= 0; i--) { // 從高位到低位反向組合
if (buffer[i] < 0x10) {
reversedHexUID += "0"; // 補零，確保每位都是兩個字元
}
reversedHexUID += String(buffer[i], HEX);
}
reversedHexUID.toUpperCase(); // 將字串轉為大寫
return reversedHexUID;
}
reversedUID += String(buffer[i], HEX);
}
}

return reversedUID;
}
